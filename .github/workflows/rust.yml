name: Rust

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Get version
        id: get_version
        run: echo "NEW_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build
        run: cargo build --verbose

      - name: Set version to tag
        id: bump_version
        env:
          NEW_VERSION: ${{ steps.get_version.outputs.NEW_VERSION }}
        run: |
          sed -i -E "s/^version = \"[0-9.]*\"$/version = \"$NEW_VERSION\"/" Cargo.toml
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Generate release notes
        id: release_notes
        run: |
          # Get commit messages since last tag
          RELEASE_NOTES="$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s")"

          # Set output
          echo  "NOTES=$RELEASE_NOTES >> $GITHUB_OUTPUT"
        if: startsWith(github.ref, 'refs/tags/v')

      - name: create release
        uses: ncipollo/release-action@v1.13.0
        with:
          body: ${{ steps.release_notes.outputs.NOTES }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.get_version.outputs.NEW_VERSION }}
          prerelease: false
          draft: false
          name: Release v${{ steps.get_version.outputs.NEW_VERSION }}
          generateReleaseNotes: true
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Publish DRY RUN
        run: cargo publish --dry-run --allow-dirty

      - name: Publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --allow-dirty
        if: startsWith(github.ref, 'refs/tags/v')
